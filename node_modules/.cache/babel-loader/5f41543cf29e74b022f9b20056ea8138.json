{"ast":null,"code":"var _jsxFileName = \"/Users/alphabootis/d3-practice/src/Components/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Charts = () => {\n  _s();\n\n  const [data] = useState([{\n    property: \"a\",\n    value: 4\n  }, {\n    property: \"b\",\n    value: 3\n  }, {\n    property: \"c\",\n    value: 10\n  }, {\n    property: \"d\",\n    value: 2\n  }, {\n    property: \"e\",\n    value: 8\n  }]);\n  const svgRef = useRef();\n  useEffect(() => {\n    const w = 500;\n    const h = 500;\n    const radius = w / 2;\n    const svg = d3.select(svgRef.current).select(svgRef.current).attr(\"width\", w).attr(\"height\", h).style(\"overrflow\", \"visible\").style(\"margin-top\", \"400px\").style(\"margin-left\", \"400px\");\n    const formattedData = d3.pie().value(d => d.value)(data);\n    const arcGenerator = d3.arc().innerRadius(0).outerRadius(radius);\n    const color = d3.scaleOrdinal().range(d3.schemeSet2);\n    svg.selectAll().data(formattedData).join(\"path\").attr(\"d\", arcGenerator).attr(\"fill\", d => color(d.value)).style(\"opacity\", 0.7);\n    svg.selectAll().data(formattedData).join(\"text\").text(d => d.data.property).attr(\"transform\", d => `translate({$arcGenerator.centeroid(d)})`).style(\"text-anchor\", \"middle\");\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 2\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Charts, \"koLFkO1+psxGPCbIQmiWT3kZASI=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/alphabootis/d3-practice/src/Components/Charts.js"],"names":["React","useState","useRef","useEffect","d3","Charts","data","property","value","svgRef","w","h","radius","svg","select","current","attr","style","formattedData","pie","d","arcGenerator","arc","innerRadius","outerRadius","color","scaleOrdinal","range","schemeSet2","selectAll","join","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,IAASL,QAAQ,CAAC,CACzB;AAAEM,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GADyB,EAEzB;AAAED,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAFyB,EAGzB;AAAED,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAHyB,EAIzB;AAAED,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GAJyB,EAKzB;AAAED,IAAAA,QAAQ,EAAE,GAAZ;AAAiBC,IAAAA,KAAK,EAAE;AAAxB,GALyB,CAAD,CAAvB;AAOH,QAAMC,MAAM,GAAGP,MAAM,EAArB;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMO,CAAC,GAAG,GAAV;AACA,UAAMC,CAAC,GAAG,GAAV;AACA,UAAMC,MAAM,GAAGF,CAAC,GAAG,CAAnB;AACA,UAAMG,GAAG,GAAGT,EAAE,CACXU,MADS,CACFL,MAAM,CAACM,OADL,EAETD,MAFS,CAEFL,MAAM,CAACM,OAFL,EAGTC,IAHS,CAGJ,OAHI,EAGKN,CAHL,EAITM,IAJS,CAIJ,QAJI,EAIML,CAJN,EAKTM,KALS,CAKH,WALG,EAKU,SALV,EAMTA,KANS,CAMH,YANG,EAMW,OANX,EAOTA,KAPS,CAOH,aAPG,EAOY,OAPZ,CAAZ;AASA,UAAMC,aAAa,GAAGd,EAAE,CAACe,GAAH,GAASX,KAAT,CAAgBY,CAAD,IAAOA,CAAC,CAACZ,KAAxB,EAA+BF,IAA/B,CAAtB;AACA,UAAMe,YAAY,GAAGjB,EAAE,CAACkB,GAAH,GAASC,WAAT,CAAqB,CAArB,EAAwBC,WAAxB,CAAoCZ,MAApC,CAArB;AACA,UAAMa,KAAK,GAAGrB,EAAE,CAACsB,YAAH,GAAkBC,KAAlB,CAAwBvB,EAAE,CAACwB,UAA3B,CAAd;AAEAf,IAAAA,GAAG,CACAgB,SADH,GAEGvB,IAFH,CAEQY,aAFR,EAGGY,IAHH,CAGQ,MAHR,EAIGd,IAJH,CAIQ,GAJR,EAIaK,YAJb,EAKGL,IALH,CAKQ,MALR,EAKiBI,CAAD,IAAOK,KAAK,CAACL,CAAC,CAACZ,KAAH,CAL5B,EAMGS,KANH,CAMS,SANT,EAMoB,GANpB;AAQAJ,IAAAA,GAAG,CACAgB,SADH,GAEGvB,IAFH,CAEQY,aAFR,EAGGY,IAHH,CAGQ,MAHR,EAIGC,IAJH,CAISX,CAAD,IAAOA,CAAC,CAACd,IAAF,CAAOC,QAJtB,EAKGS,IALH,CAKQ,WALR,EAKsBI,CAAD,IAAQ,yCAL7B,EAMGH,KANH,CAMS,aANT,EAMwB,QANxB;AAOD,GAhCQ,EAgCN,CAACX,IAAD,CAhCM,CAAT;AAoCE,sBACI;AAAA,2BAEP;AAAK,MAAA,GAAG,EAAEG;AAAV;AAAA;AAAA;AAAA;AAAA;AAFO;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAtDD;;GAAMJ,M;;KAAAA,M;AAwDN,eAAeA,MAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst Charts = () => {\n     const [data] = useState([\n    { property: \"a\", value: 4 },\n    { property: \"b\", value: 3 },\n    { property: \"c\", value: 10 },\n    { property: \"d\", value: 2 },\n    { property: \"e\", value: 8 },\n  ]);\n  const svgRef = useRef();\n\n  useEffect(() => {\n    const w = 500;\n    const h = 500;\n    const radius = w / 2;\n    const svg = d3\n      .select(svgRef.current)\n      .select(svgRef.current)\n      .attr(\"width\", w)\n      .attr(\"height\", h)\n      .style(\"overrflow\", \"visible\")\n      .style(\"margin-top\", \"400px\")\n      .style(\"margin-left\", \"400px\");\n\n    const formattedData = d3.pie().value((d) => d.value)(data);\n    const arcGenerator = d3.arc().innerRadius(0).outerRadius(radius);\n    const color = d3.scaleOrdinal().range(d3.schemeSet2);\n\n    svg\n      .selectAll()\n      .data(formattedData)\n      .join(\"path\")\n      .attr(\"d\", arcGenerator)\n      .attr(\"fill\", (d) => color(d.value))\n      .style(\"opacity\", 0.7);\n\n    svg\n      .selectAll()\n      .data(formattedData)\n      .join(\"text\")\n      .text((d) => d.data.property)\n      .attr(\"transform\", (d) => `translate({$arcGenerator.centeroid(d)})`)\n      .style(\"text-anchor\", \"middle\");\n  }, [data]);\n\n  \n\n    return (\n        <div>\n            \n{<svg ref={svgRef}></svg>}\n \n           \n        </div>\n    );\n}\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}