{"ast":null,"code":"var _jsxFileName = \"/Users/alphabootis/d3-practice/src/Components/Charts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Charts = () => {\n  _s();\n\n  const [data] = useState([10, 20, 30, 40]);\n  const ref = useRef();\n  const createPie = d3.pie().value(d => d.value).sort(null);\n  const createArc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\n  const format = d3.format(\".2f\");\n  useEffect(() => {\n    const data = createPie(data);\n    const group = d3.select(ref.current);\n    const groupWithData = group.selectAll(\"g.arc\").data(data);\n    groupWithData.exit().remove();\n    const groupWithUpdate = groupWithData.enter().append(\"g\").attr(\"class\", \"arc\");\n    const path = groupWithUpdate.append(\"path\").merge(groupWithData.select(\"path.arc\"));\n    path.attr(\"class\", \"arc\").attr(\"d\", createArc).attr(\"fill\", (d, i) => colors(i));\n    const text = groupWithUpdate.append(\"text\").merge(groupWithData.select(\"text\"));\n    text.attr(\"text-anchor\", \"middle\").attr(\"alignment-baseline\", \"middle\").attr(\"transform\", d => `translate(${createArc.centroid(d)})`).style(\"fill\", \"white\").style(\"font-size\", 10).text(d => format(d.value));\n  }, [data]);\n  return /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: props.width,\n    height: props.height,\n    children: /*#__PURE__*/_jsxDEV(\"g\", {\n      ref: ref,\n      transform: `translate(${props.outerRadius} ${props.outerRadius})`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Charts, \"VCRNI03f+P/OydPQ7joWEMFyY0Y=\");\n\n_c = Charts;\nexport default Charts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Charts\");","map":{"version":3,"sources":["/Users/alphabootis/d3-practice/src/Components/Charts.js"],"names":["React","useState","useRef","useEffect","d3","Charts","data","ref","createPie","pie","value","d","sort","createArc","arc","innerRadius","outerRadius","colors","scaleOrdinal","schemeCategory10","format","group","select","current","groupWithData","selectAll","exit","remove","groupWithUpdate","enter","append","attr","path","merge","i","text","centroid","style","props","width","height"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,QAAM,CAACC,IAAD,IAASL,QAAQ,CAAC,CAAC,EAAD,EAAI,EAAJ,EAAO,EAAP,EAAU,EAAV,CAAD,CAAvB;AACF,QAAMM,GAAG,GAAGL,MAAM,EAAlB;AACA,QAAMM,SAAS,GAAGJ,EAAE,CACjBK,GADe,GAEfC,KAFe,CAETC,CAAC,IAAIA,CAAC,CAACD,KAFE,EAGfE,IAHe,CAGV,IAHU,CAAlB;AAIA,QAAMC,SAAS,GAAGT,EAAE,CACjBU,GADe,GAEfC,WAFe,CAEHA,WAFG,EAGfC,WAHe,CAGHA,WAHG,CAAlB;AAIA,QAAMC,MAAM,GAAGb,EAAE,CAACc,YAAH,CAAgBd,EAAE,CAACe,gBAAnB,CAAf;AACA,QAAMC,MAAM,GAAGhB,EAAE,CAACgB,MAAH,CAAU,KAAV,CAAf;AAEAjB,EAAAA,SAAS,CACP,MAAM;AACJ,UAAMG,IAAI,GAAGE,SAAS,CAACF,IAAD,CAAtB;AACA,UAAMe,KAAK,GAAGjB,EAAE,CAACkB,MAAH,CAAUf,GAAG,CAACgB,OAAd,CAAd;AACA,UAAMC,aAAa,GAAGH,KAAK,CAACI,SAAN,CAAgB,OAAhB,EAAyBnB,IAAzB,CAA8BA,IAA9B,CAAtB;AAEAkB,IAAAA,aAAa,CAACE,IAAd,GAAqBC,MAArB;AAEA,UAAMC,eAAe,GAAGJ,aAAa,CAClCK,KADqB,GAErBC,MAFqB,CAEd,GAFc,EAGrBC,IAHqB,CAGhB,OAHgB,EAGP,KAHO,CAAxB;AAKA,UAAMC,IAAI,GAAGJ,eAAe,CACzBE,MADU,CACH,MADG,EAEVG,KAFU,CAEJT,aAAa,CAACF,MAAd,CAAqB,UAArB,CAFI,CAAb;AAIAU,IAAAA,IAAI,CACDD,IADH,CACQ,OADR,EACiB,KADjB,EAEGA,IAFH,CAEQ,GAFR,EAEalB,SAFb,EAGGkB,IAHH,CAGQ,MAHR,EAGgB,CAACpB,CAAD,EAAIuB,CAAJ,KAAUjB,MAAM,CAACiB,CAAD,CAHhC;AAKA,UAAMC,IAAI,GAAGP,eAAe,CACzBE,MADU,CACH,MADG,EAEVG,KAFU,CAEJT,aAAa,CAACF,MAAd,CAAqB,MAArB,CAFI,CAAb;AAIAa,IAAAA,IAAI,CACDJ,IADH,CACQ,aADR,EACuB,QADvB,EAEGA,IAFH,CAEQ,oBAFR,EAE8B,QAF9B,EAGGA,IAHH,CAGQ,WAHR,EAGqBpB,CAAC,IAAK,aAAYE,SAAS,CAACuB,QAAV,CAAmBzB,CAAnB,CAAsB,GAH7D,EAIG0B,KAJH,CAIS,MAJT,EAIiB,OAJjB,EAKGA,KALH,CAKS,WALT,EAKsB,EALtB,EAMGF,IANH,CAMQxB,CAAC,IAAIS,MAAM,CAACT,CAAC,CAACD,KAAH,CANnB;AAOD,GAjCM,EAkCP,CAACJ,IAAD,CAlCO,CAAT;AAqCA,sBACE;AAAK,IAAA,KAAK,EAAEgC,KAAK,CAACC,KAAlB;AAAyB,IAAA,MAAM,EAAED,KAAK,CAACE,MAAvC;AAAA,2BACE;AACE,MAAA,GAAG,EAAEjC,GADP;AAEE,MAAA,SAAS,EAAG,aAAY+B,KAAK,CAACtB,WAAY,IAAGsB,KAAK,CAACtB,WAAY;AAFjE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CA3DD;;GAAMX,M;;KAAAA,M;AA6DN,eAAeA,MAAf","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\nconst Charts = () => {\n    const [data] = useState([10,20,30,40]);\n  const ref = useRef();\n  const createPie = d3\n    .pie()\n    .value(d => d.value)\n    .sort(null);\n  const createArc = d3\n    .arc()\n    .innerRadius(innerRadius)\n    .outerRadius(outerRadius);\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\n  const format = d3.format(\".2f\");\n\n  useEffect(\n    () => {\n      const data = createPie(data);\n      const group = d3.select(ref.current);\n      const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n      groupWithData.exit().remove();\n\n      const groupWithUpdate = groupWithData\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"arc\");\n\n      const path = groupWithUpdate\n        .append(\"path\")\n        .merge(groupWithData.select(\"path.arc\"));\n\n      path\n        .attr(\"class\", \"arc\")\n        .attr(\"d\", createArc)\n        .attr(\"fill\", (d, i) => colors(i));\n\n      const text = groupWithUpdate\n        .append(\"text\")\n        .merge(groupWithData.select(\"text\"));\n\n      text\n        .attr(\"text-anchor\", \"middle\")\n        .attr(\"alignment-baseline\", \"middle\")\n        .attr(\"transform\", d => `translate(${createArc.centroid(d)})`)\n        .style(\"fill\", \"white\")\n        .style(\"font-size\", 10)\n        .text(d => format(d.value));\n    },\n    [data]\n  );\n\n  return (\n    <svg width={props.width} height={props.height}>\n      <g\n        ref={ref}\n        transform={`translate(${props.outerRadius} ${props.outerRadius})`}\n      />\n    </svg>\n  );\n};\n\nexport default Charts;"]},"metadata":{},"sourceType":"module"}