[{"/Users/alphabootis/d3-practice/src/App.js":"1","/Users/alphabootis/d3-practice/src/Components/Charts.js":"2"},{"size":1020,"mtime":1650995175464,"results":"3","hashOfConfig":"4"},{"size":1411,"mtime":1650995325927,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","suppressedMessages":"8","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"9","usedDeprecatedRules":"10"},"1n00iek",{"filePath":"11","messages":"12","suppressedMessages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"/Users/alphabootis/d3-practice/src/App.js",["15"],[],"import Charts from './Components/Charts';\nimport SimpleGraph from './Components/SimpleGraph';\nimport TeeGraph from './Components/TeeGraph';\n\nimport * as d3 from \"d3\";\nimport React, { useState, useRef, useEffect} from \"react\";\n\n\nconst App=()=> {\n  // const data = useState([\n  //   { date: 0, value: 1 },\n  //   { date: 1, value:  20},\n  //   { date: 2, value: 30},\n  //   { date: 3, value: 40 },\n  //   { date: 4, value: 50},\n\n  // ]);\n   const generateData = (value, length = 5) =>\n     d3.range(length).map((item, index) => ({\n      date: index,\n      value: 200,\n    }));\n\n  const [data, setData] = useState();\n  \n\n  useEffect(\n    () => {\n      setData(generateData());\n    },\n    []\n  );\n\n  return (\n    <div>\n        <span className=\"label\">Multiple attackers</span>\n        <Charts \n          data={data}\n          width={200}\n          height={200}\n          innerRadius={0}\n          outerRadius={100}\n\n        \n\n        />\n        <SimpleGraph />\n        <TeeGraph />\n      </div>\n\n  );\n}\n\nexport default App;\n",[],"/Users/alphabootis/d3-practice/src/Components/Charts.js",["16","17","18","19"],[],"import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n const Charts = (props) => {\n    \n  const ref = useRef(null);\n  const createPie = d3\n    .pie()\n    .value(d => d.value)\n    .sort(null);\n  const createArc = d3\n    .arc()\n    .innerRadius(props.innerRadius)\n    .outerRadius(props.outerRadius);\n  const colors = ['#5878A3','#E49343','#D0605E','#85B5B1','#6B9F57']\n  const format = d3.format(\".2f\");\n\n  useEffect(\n    () => {\n      if (props.data){\n\n      \n      const data = createPie(props.data);\n      console.log(data);\n      const group = d3.select(ref.current);\n      const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n      groupWithData.exit().remove();\n\n      const groupWithUpdate = groupWithData\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"arc\");\n\n      const path = groupWithUpdate\n        .append(\"path\")\n        .merge(groupWithData.select(\"path.arc\"));\n\n      path\n        .attr(\"class\", \"arc\")\n        .attr(\"d\", createArc)\n        .attr(\"fill\", (d, i) => colors[i]);\n\n      const text = groupWithUpdate\n        .append(\"text\")\n        .merge(groupWithData.select(\"text\"));\n\n      };\n    },\n\n    [props.data]\n  );\n\n  return (\n    <svg width={props.width} height={props.height}>\n      <g\n        ref={ref}\n        transform={`translate(${props.outerRadius} ${props.outerRadius})`}\n      />\n    </svg>\n  );\n};\nexport default Charts;\n\n",{"ruleId":"20","severity":1,"message":"21","line":6,"column":27,"nodeType":"22","messageId":"23","endLine":6,"endColumn":33},{"ruleId":"20","severity":1,"message":"24","line":1,"column":17,"nodeType":"22","messageId":"23","endLine":1,"endColumn":25},{"ruleId":"20","severity":1,"message":"25","line":16,"column":9,"nodeType":"22","messageId":"23","endLine":16,"endColumn":15},{"ruleId":"20","severity":1,"message":"26","line":44,"column":13,"nodeType":"22","messageId":"23","endLine":44,"endColumn":17},{"ruleId":"27","severity":1,"message":"28","line":51,"column":5,"nodeType":"29","endLine":51,"endColumn":17,"suggestions":"30"},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'format' is assigned a value but never used.","'text' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'colors', 'createArc', and 'createPie'. Either include them or remove the dependency array.","ArrayExpression",["31"],{"desc":"32","fix":"33"},"Update the dependencies array to be: [colors, createArc, createPie, props.data]",{"range":"34","text":"35"},[1175,1187],"[colors, createArc, createPie, props.data]"]