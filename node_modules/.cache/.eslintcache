[{"/Users/alphabootis/d3-practice/src/index.js":"1","/Users/alphabootis/d3-practice/src/App.js":"2","/Users/alphabootis/d3-practice/src/reportWebVitals.js":"3","/Users/alphabootis/d3-practice/src/Components/Charts.js":"4","/Users/alphabootis/d3-practice/src/Components/Graphs.js":"5"},{"size":535,"mtime":1650730931546,"results":"6","hashOfConfig":"7"},{"size":877,"mtime":1650739905945,"results":"8","hashOfConfig":"7"},{"size":362,"mtime":1650730931547,"results":"9","hashOfConfig":"7"},{"size":1336,"mtime":1650738871042,"results":"10","hashOfConfig":"7"},{"size":216,"mtime":1650730931546,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","suppressedMessages":"14","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n00iek",{"filePath":"15","messages":"16","suppressedMessages":"17","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18"},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/alphabootis/d3-practice/src/index.js",[],[],"/Users/alphabootis/d3-practice/src/App.js",["30","31","32","33"],[],"import './App.css';\nimport Charts from './Components/Charts';\nimport Graphs from './Components/Graphs';\nimport * as d3 from \"d3\";\nimport React, { useState, useRef, useEffect} from \"react\";\n\n\nconst App=()=> {\n  const generateData = (value, length = 5) =>\n    d3.range(length).map((item, index) => ({\n      date: index,\n      value: value === null || value === undefined ? Math.random() * 100 : value\n    }));\n\n  const [data, setData] = useState(generateData(0));\n  const changeData = () => {\n    setData(generateData());\n  };\n\n  useEffect(\n    () => {\n      setData(generateData());\n    },\n    [!data]\n  );\n\n  return (\n    <div>\n        <span className=\"label\">Multiple attackers</span>\n        <Charts \n          data={data}\n          width={200}\n          height={200}\n          innerRadius={0}\n          outerRadius={100}\n        />\n      </div>\n\n  );\n}\n\nexport default App;\n","/Users/alphabootis/d3-practice/src/reportWebVitals.js",[],[],"/Users/alphabootis/d3-practice/src/Components/Charts.js",["34","35","36","37"],[],"import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n const Charts = (props) => {\n    \n  const ref = useRef(null);\n  const createPie = d3\n    .pie()\n    .value(d => d.value)\n    .sort(null);\n  const createArc = d3\n    .arc()\n    .innerRadius(props.innerRadius)\n    .outerRadius(props.outerRadius);\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\n  const format = d3.format(\".2f\");\n\n  useEffect(\n    () => {\n      const data = createPie(props.data);\n      const group = d3.select(ref.current);\n      const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n      groupWithData.exit().remove();\n\n      const groupWithUpdate = groupWithData\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"arc\");\n\n      const path = groupWithUpdate\n        .append(\"path\")\n        .merge(groupWithData.select(\"path.arc\"));\n\n      path\n        .attr(\"class\", \"arc\")\n        .attr(\"d\", createArc)\n        .attr(\"fill\", (d, i) => colors(i));\n\n      const text = groupWithUpdate\n        .append(\"text\")\n        .merge(groupWithData.select(\"text\"));\n\n    \n    },\n    [props.data]\n  );\n\n  return (\n    <svg width={props.width} height={props.height}>\n      <g\n        ref={ref}\n        transform={`translate(${props.outerRadius} ${props.outerRadius})`}\n      />\n    </svg>\n  );\n};\nexport default Charts;\n\n",[],"/Users/alphabootis/d3-practice/src/Components/Graphs.js",["38","39","40","41"],[],{"ruleId":"42","severity":1,"message":"43","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":14},{"ruleId":"42","severity":1,"message":"46","line":5,"column":27,"nodeType":"44","messageId":"45","endLine":5,"endColumn":33},{"ruleId":"42","severity":1,"message":"47","line":16,"column":9,"nodeType":"44","messageId":"45","endLine":16,"endColumn":19},{"ruleId":"48","severity":1,"message":"49","line":24,"column":6,"nodeType":"50","endLine":24,"endColumn":11},{"ruleId":"42","severity":1,"message":"51","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"52","line":16,"column":9,"nodeType":"44","messageId":"45","endLine":16,"endColumn":15},{"ruleId":"42","severity":1,"message":"53","line":40,"column":13,"nodeType":"44","messageId":"45","endLine":40,"endColumn":17},{"ruleId":"48","severity":1,"message":"54","line":46,"column":5,"nodeType":"55","endLine":46,"endColumn":17,"suggestions":"56"},{"ruleId":"42","severity":1,"message":"51","line":1,"column":17,"nodeType":"44","messageId":"45","endLine":1,"endColumn":25},{"ruleId":"42","severity":1,"message":"46","line":1,"column":27,"nodeType":"44","messageId":"45","endLine":1,"endColumn":33},{"ruleId":"42","severity":1,"message":"57","line":1,"column":35,"nodeType":"44","messageId":"45","endLine":1,"endColumn":44},{"ruleId":"42","severity":1,"message":"58","line":2,"column":13,"nodeType":"44","messageId":"45","endLine":2,"endColumn":15},"no-unused-vars","'Graphs' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'changeData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","'useState' is defined but never used.","'format' is assigned a value but never used.","'text' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'colors', 'createArc', and 'createPie'. Either include them or remove the dependency array.","ArrayExpression",["59"],"'useEffect' is defined but never used.","'d3' is defined but never used.",{"desc":"60","fix":"61"},"Update the dependencies array to be: [colors, createArc, createPie, props.data]",{"range":"62","text":"63"},[1100,1112],"[colors, createArc, createPie, props.data]"]