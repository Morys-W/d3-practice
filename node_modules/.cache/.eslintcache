[{"/Users/alphabootis/d3-practice/src/index.js":"1","/Users/alphabootis/d3-practice/src/App.js":"2","/Users/alphabootis/d3-practice/src/reportWebVitals.js":"3","/Users/alphabootis/d3-practice/src/Components/Charts.js":"4"},{"size":535,"mtime":1650730931546,"results":"5","hashOfConfig":"6"},{"size":1190,"mtime":1650741528441,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1650730931547,"results":"8","hashOfConfig":"6"},{"size":1336,"mtime":1650738871042,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n00iek",{"filePath":"13","messages":"14","suppressedMessages":"15","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","suppressedMessages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","suppressedMessages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},"/Users/alphabootis/d3-practice/src/index.js",[],[],"/Users/alphabootis/d3-practice/src/App.js",["24"],[],"/Users/alphabootis/d3-practice/src/reportWebVitals.js",[],[],"/Users/alphabootis/d3-practice/src/Components/Charts.js",["25","26","27","28"],[],"import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n const Charts = (props) => {\n    \n  const ref = useRef(null);\n  const createPie = d3\n    .pie()\n    .value(d => d.value)\n    .sort(null);\n  const createArc = d3\n    .arc()\n    .innerRadius(props.innerRadius)\n    .outerRadius(props.outerRadius);\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\n  const format = d3.format(\".2f\");\n\n  useEffect(\n    () => {\n      const data = createPie(props.data);\n      const group = d3.select(ref.current);\n      const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n      groupWithData.exit().remove();\n\n      const groupWithUpdate = groupWithData\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"arc\");\n\n      const path = groupWithUpdate\n        .append(\"path\")\n        .merge(groupWithData.select(\"path.arc\"));\n\n      path\n        .attr(\"class\", \"arc\")\n        .attr(\"d\", createArc)\n        .attr(\"fill\", (d, i) => colors(i));\n\n      const text = groupWithUpdate\n        .append(\"text\")\n        .merge(groupWithData.select(\"text\"));\n\n    \n    },\n    [props.data]\n  );\n\n  return (\n    <svg width={props.width} height={props.height}>\n      <g\n        ref={ref}\n        transform={`translate(${props.outerRadius} ${props.outerRadius})`}\n      />\n    </svg>\n  );\n};\nexport default Charts;\n\n",[],{"ruleId":null,"fatal":true,"severity":2,"message":"29","line":2,"column":1},{"ruleId":"30","severity":1,"message":"31","line":1,"column":17,"nodeType":"32","messageId":"33","endLine":1,"endColumn":25},{"ruleId":"30","severity":1,"message":"34","line":16,"column":9,"nodeType":"32","messageId":"33","endLine":16,"endColumn":15},{"ruleId":"30","severity":1,"message":"35","line":40,"column":13,"nodeType":"32","messageId":"33","endLine":40,"endColumn":17},{"ruleId":"36","severity":1,"message":"37","line":46,"column":5,"nodeType":"38","endLine":46,"endColumn":17,"suggestions":"39"},"Parsing error: Unexpected token (2:1)","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'format' is assigned a value but never used.","'text' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'colors', 'createArc', and 'createPie'. Either include them or remove the dependency array.","ArrayExpression",["40"],{"desc":"41","fix":"42"},"Update the dependencies array to be: [colors, createArc, createPie, props.data]",{"range":"43","text":"44"},[1100,1112],"[colors, createArc, createPie, props.data]"]