[{"/Users/alphabootis/d3-practice/src/index.js":"1","/Users/alphabootis/d3-practice/src/App.js":"2","/Users/alphabootis/d3-practice/src/reportWebVitals.js":"3","/Users/alphabootis/d3-practice/src/Components/Charts.js":"4","/Users/alphabootis/d3-practice/src/Components/TeeGraph.js":"5","/Users/alphabootis/d3-practice/src/Components/SimpleGraph.js":"6"},{"size":535,"mtime":1650730931546,"results":"7","hashOfConfig":"8"},{"size":970,"mtime":1650741930470,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1650730931547,"results":"10","hashOfConfig":"8"},{"size":1336,"mtime":1650738871042,"results":"11","hashOfConfig":"8"},{"size":1589,"mtime":1650741521254,"results":"12","hashOfConfig":"8"},{"size":316,"mtime":1650742323314,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1n00iek",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20","usedDeprecatedRules":"21"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"21"},{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"/Users/alphabootis/d3-practice/src/index.js",[],[],"/Users/alphabootis/d3-practice/src/App.js",["36","37","38"],[],"import Charts from './Components/Charts';\nimport SimpleGraph from './Components/SimpleGraph';\nimport TeeGraph from './Components/TeeGraph';\n\nimport * as d3 from \"d3\";\nimport React, { useState, useRef, useEffect} from \"react\";\n\n\nconst App=()=> {\n  const generateData = (value, length = 5) =>\n    d3.range(length).map((item, index) => ({\n      date: index,\n      value: value === null || value === undefined ? Math.random() * 100 : value\n    }));\n\n  const [data, setData] = useState(generateData(0));\n  const changeData = () => {\n    setData(generateData());\n  };\n\n  useEffect(\n    () => {\n      setData(generateData());\n    },\n    [!data]\n  );\n\n  return (\n    <div>\n        <span className=\"label\">Multiple attackers</span>\n        <Charts \n          data={data}\n          width={200}\n          height={200}\n          innerRadius={0}\n          outerRadius={100}\n\n        \n\n        />\n        <SimpleGraph />\n        <TeeGraph />\n      </div>\n\n  );\n}\n\nexport default App;\n",[],"/Users/alphabootis/d3-practice/src/reportWebVitals.js",[],[],"/Users/alphabootis/d3-practice/src/Components/Charts.js",["39","40","41","42"],[],"import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n const Charts = (props) => {\n    \n  const ref = useRef(null);\n  const createPie = d3\n    .pie()\n    .value(d => d.value)\n    .sort(null);\n  const createArc = d3\n    .arc()\n    .innerRadius(props.innerRadius)\n    .outerRadius(props.outerRadius);\n  const colors = d3.scaleOrdinal(d3.schemeCategory10);\n  const format = d3.format(\".2f\");\n\n  useEffect(\n    () => {\n      const data = createPie(props.data);\n      const group = d3.select(ref.current);\n      const groupWithData = group.selectAll(\"g.arc\").data(data);\n\n      groupWithData.exit().remove();\n\n      const groupWithUpdate = groupWithData\n        .enter()\n        .append(\"g\")\n        .attr(\"class\", \"arc\");\n\n      const path = groupWithUpdate\n        .append(\"path\")\n        .merge(groupWithData.select(\"path.arc\"));\n\n      path\n        .attr(\"class\", \"arc\")\n        .attr(\"d\", createArc)\n        .attr(\"fill\", (d, i) => colors(i));\n\n      const text = groupWithUpdate\n        .append(\"text\")\n        .merge(groupWithData.select(\"text\"));\n\n    \n    },\n    [props.data]\n  );\n\n  return (\n    <svg width={props.width} height={props.height}>\n      <g\n        ref={ref}\n        transform={`translate(${props.outerRadius} ${props.outerRadius})`}\n      />\n    </svg>\n  );\n};\nexport default Charts;\n\n","/Users/alphabootis/d3-practice/src/Components/TeeGraph.js",[],[],"/Users/alphabootis/d3-practice/src/Components/SimpleGraph.js",["43","44","45"],[],"import React, { useState, useRef, useEffect } from \"react\";\nimport * as d3 from \"d3\";\n\n\nconst SimpleGraph = () => {\n    const [data] = useState([200, 250, 60, 175, 100]);\n    const svgRef = useRef();\n\n    return (\n        <div>\n            <svg ref={svgRef}></svg>\n        </div>\n    )\n}\n\nexport default SimpleGraph;",{"ruleId":"46","severity":1,"message":"47","line":6,"column":27,"nodeType":"48","messageId":"49","endLine":6,"endColumn":33},{"ruleId":"46","severity":1,"message":"50","line":17,"column":9,"nodeType":"48","messageId":"49","endLine":17,"endColumn":19},{"ruleId":"51","severity":1,"message":"52","line":25,"column":6,"nodeType":"53","endLine":25,"endColumn":11},{"ruleId":"46","severity":1,"message":"54","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":25},{"ruleId":"46","severity":1,"message":"55","line":16,"column":9,"nodeType":"48","messageId":"49","endLine":16,"endColumn":15},{"ruleId":"46","severity":1,"message":"56","line":40,"column":13,"nodeType":"48","messageId":"49","endLine":40,"endColumn":17},{"ruleId":"51","severity":1,"message":"57","line":46,"column":5,"nodeType":"58","endLine":46,"endColumn":17,"suggestions":"59"},{"ruleId":"46","severity":1,"message":"60","line":1,"column":35,"nodeType":"48","messageId":"49","endLine":1,"endColumn":44},{"ruleId":"46","severity":1,"message":"61","line":2,"column":13,"nodeType":"48","messageId":"49","endLine":2,"endColumn":15},{"ruleId":"46","severity":1,"message":"62","line":6,"column":12,"nodeType":"48","messageId":"49","endLine":6,"endColumn":16},"no-unused-vars","'useRef' is defined but never used.","Identifier","unusedVar","'changeData' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","UnaryExpression","'useState' is defined but never used.","'format' is assigned a value but never used.","'text' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'colors', 'createArc', and 'createPie'. Either include them or remove the dependency array.","ArrayExpression",["63"],"'useEffect' is defined but never used.","'d3' is defined but never used.","'data' is assigned a value but never used.",{"desc":"64","fix":"65"},"Update the dependencies array to be: [colors, createArc, createPie, props.data]",{"range":"66","text":"67"},[1100,1112],"[colors, createArc, createPie, props.data]"]